name: spotify build and deploy

on:
  push:
    branches: [main]
    paths: ['course_svelte/udemy_sveltekit/spotify/src/**']
  workflow_dispatch:
    inputs:
      logLevel:
        description: 'Log level'
        default: 'warning'
      tags:
        description: 'Test scenario tags'
jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Install Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 21.5.0

      - uses: pnpm/action-setup@v3
        name: Install pnpm
        with:
          version: 8.14.0
          run_install: false

      # - uses: pnpm/action-setup@v2
      #   with:
      #     version: 8.6.0

      - name: Install Infisical CLI
        run:
          sudo apt-get update && sudo apt-get install -y curl && curl -1sLf
          'https://dl.cloudsmith.io/public/infisical/infisical-cli/setup.deb.sh'
          | sudo bash -E && sudo apt-get update && sudo apt-get install -y
          infisical

      - name: Get pnpm store directory
        shell: bash
        run: |
          echo "STORE_PATH=$(pnpm store path --silent)" >> $GITHUB_ENV

      - uses: actions/cache@v3
        name: Setup pnpm cache
        with:
          path: ${{ env.STORE_PATH }}
          key: ${{ runner.os }}-pnpm-store-${{ hashFiles('**/pnpm-lock.yaml') }}
          restore-keys: |
            ${{ runner.os }}-pnpm-store-

      - name: Install NX Cli
        run: pnpm add -g nx

      - name: Install node gyp
        run: pnpm add -g node-gyp

      - name: Install dependencies
        run: pnpm install -r --frozen-lockfile

      # - name: Install packages and build
      #   uses: actions/setup-node@v3
      #   with:
      #     node-version: '20.5'
      #     cache: 'pnpm'
      # - run: pnpm install -r --frozen-lockfile

      - name: Build project
        env:
          INFISICAL_TOKEN: ${{ secrets.INFISICAL_TOKEN }}
        run: nx run spotify:build

      #### DOCKER

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_TOKEN }}
      - name: Build and push
        uses: docker/build-push-action@v5
        with:
          context: ./course_svelte/udemy_sveltekit/spotify
          platforms: linux/amd64,linux/arm64
          push: true
          tags: halamert/spotify-clone:latest
